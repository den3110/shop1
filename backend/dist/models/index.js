"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.db = void 0;
var _fs = require("fs");
var _path = require("path");
var _sequelize = _interopRequireDefault(require("sequelize"));
var _config = _interopRequireDefault(require("../config"));
var basename = (0, _path.basename)(__filename);
var db = exports.db = {};
var sequelize = new _sequelize["default"](_config["default"].db.database, _config["default"].db.username, _config["default"].db.password, {
  host: _config["default"].db.host,
  port: _config["default"].db.port,
  dialect: _config["default"].db.connection,
  logging: false,
  underscored: true,
  pool: {
    max: 20,
    min: 1,
    idle: 20000,
    acquire: 1000000
  },
  timestamps: true
});
(0, _fs.readdirSync)(__dirname).filter(function (file) {
  return file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js';
}).forEach(function (file) {
  var model = sequelize['import']((0, _path.join)(__dirname, file));
  db[model.name] = model;
});
Object.keys(db).forEach(function (modelName) {
  if (db[modelName].associate) {
    db[modelName].associate(db);
  }
});
db.sequelize = sequelize;
db.Sequelize = _sequelize["default"];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZnMiLCJyZXF1aXJlIiwiX3BhdGgiLCJfc2VxdWVsaXplIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9jb25maWciLCJiYXNlbmFtZSIsIl9iYXNlbmFtZSIsIl9fZmlsZW5hbWUiLCJkYiIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJTZXF1ZWxpemUiLCJjb25maWciLCJkYXRhYmFzZSIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJob3N0IiwicG9ydCIsImRpYWxlY3QiLCJjb25uZWN0aW9uIiwibG9nZ2luZyIsInVuZGVyc2NvcmVkIiwicG9vbCIsIm1heCIsIm1pbiIsImlkbGUiLCJhY3F1aXJlIiwidGltZXN0YW1wcyIsInJlYWRkaXJTeW5jIiwiX19kaXJuYW1lIiwiZmlsdGVyIiwiZmlsZSIsImluZGV4T2YiLCJzbGljZSIsImZvckVhY2giLCJtb2RlbCIsImpvaW4iLCJuYW1lIiwiT2JqZWN0Iiwia2V5cyIsIm1vZGVsTmFtZSIsImFzc29jaWF0ZSJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVhZGRpclN5bmMgfSBmcm9tICdmcyc7XHJcbmltcG9ydCB7IGJhc2VuYW1lIGFzIF9iYXNlbmFtZSwgam9pbiB9IGZyb20gJ3BhdGgnO1xyXG5pbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJztcclxuY29uc3QgYmFzZW5hbWUgPSBfYmFzZW5hbWUoX19maWxlbmFtZSk7XHJcbmNvbnN0IGRiID0ge307XHJcblxyXG5sZXQgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShjb25maWcuZGIuZGF0YWJhc2UsIGNvbmZpZy5kYi51c2VybmFtZSwgY29uZmlnLmRiLnBhc3N3b3JkLCB7XHJcbiAgICBob3N0OiBjb25maWcuZGIuaG9zdCxcclxuICAgIHBvcnQ6IGNvbmZpZy5kYi5wb3J0LFxyXG4gICAgZGlhbGVjdDogY29uZmlnLmRiLmNvbm5lY3Rpb24sXHJcbiAgICBsb2dnaW5nOiBmYWxzZSxcclxuICAgIHVuZGVyc2NvcmVkOiB0cnVlLFxyXG4gICAgcG9vbDoge1xyXG4gICAgICAgIG1heDogMjAsXHJcbiAgICAgICAgbWluOiAxLFxyXG4gICAgICAgIGlkbGU6IDIwMDAwLFxyXG4gICAgICAgIGFjcXVpcmU6IDEwMDAwMDBcclxuICAgIH0sXHJcbiAgICB0aW1lc3RhbXBzOnRydWVcclxufSk7XHJcbnJlYWRkaXJTeW5jKF9fZGlybmFtZSlcclxuXHJcbiAgICAuZmlsdGVyKGZpbGUgPT4ge1xyXG4gICAgICAgIHJldHVybiAoZmlsZS5pbmRleE9mKCcuJykgIT09IDApICYmIChmaWxlICE9PSBiYXNlbmFtZSkgJiYgKGZpbGUuc2xpY2UoLTMpID09PSAnLmpzJyk7XHJcbiAgICB9KVxyXG4gICAgLmZvckVhY2goZmlsZSA9PiB7XHJcbiAgICAgICAgY29uc3QgbW9kZWwgPSBzZXF1ZWxpemVbJ2ltcG9ydCddKGpvaW4oX19kaXJuYW1lLCBmaWxlKSk7XHJcbiAgICAgICAgZGJbbW9kZWwubmFtZV0gPSBtb2RlbDtcclxuICAgIH0pO1xyXG5cclxuT2JqZWN0LmtleXMoZGIpLmZvckVhY2gobW9kZWxOYW1lID0+IHtcclxuICAgIGlmIChkYlttb2RlbE5hbWVdLmFzc29jaWF0ZSkge1xyXG4gICAgICAgIGRiW21vZGVsTmFtZV0uYXNzb2NpYXRlKGRiKTtcclxuICAgIH1cclxufSk7XHJcblxyXG5kYi5zZXF1ZWxpemUgPSBzZXF1ZWxpemU7XHJcbmRiLlNlcXVlbGl6ZSA9IFNlcXVlbGl6ZTtcclxuXHJcbmV4cG9ydCB7IGRiIH07Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBQUEsR0FBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsS0FBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsVUFBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBQUksT0FBQSxHQUFBRCxzQkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBTUssUUFBUSxHQUFHLElBQUFDLGNBQVMsRUFBQ0MsVUFBVSxDQUFDO0FBQ3RDLElBQU1DLEVBQUUsR0FBQUMsT0FBQSxDQUFBRCxFQUFBLEdBQUcsQ0FBQyxDQUFDO0FBRWIsSUFBSUUsU0FBUyxHQUFHLElBQUlDLHFCQUFTLENBQUNDLGtCQUFNLENBQUNKLEVBQUUsQ0FBQ0ssUUFBUSxFQUFFRCxrQkFBTSxDQUFDSixFQUFFLENBQUNNLFFBQVEsRUFBRUYsa0JBQU0sQ0FBQ0osRUFBRSxDQUFDTyxRQUFRLEVBQUU7RUFDdEZDLElBQUksRUFBRUosa0JBQU0sQ0FBQ0osRUFBRSxDQUFDUSxJQUFJO0VBQ3BCQyxJQUFJLEVBQUVMLGtCQUFNLENBQUNKLEVBQUUsQ0FBQ1MsSUFBSTtFQUNwQkMsT0FBTyxFQUFFTixrQkFBTSxDQUFDSixFQUFFLENBQUNXLFVBQVU7RUFDN0JDLE9BQU8sRUFBRSxLQUFLO0VBQ2RDLFdBQVcsRUFBRSxJQUFJO0VBQ2pCQyxJQUFJLEVBQUU7SUFDRkMsR0FBRyxFQUFFLEVBQUU7SUFDUEMsR0FBRyxFQUFFLENBQUM7SUFDTkMsSUFBSSxFQUFFLEtBQUs7SUFDWEMsT0FBTyxFQUFFO0VBQ2IsQ0FBQztFQUNEQyxVQUFVLEVBQUM7QUFDZixDQUFDLENBQUM7QUFDRixJQUFBQyxlQUFXLEVBQUNDLFNBQVMsQ0FBQyxDQUVqQkMsTUFBTSxDQUFDLFVBQUFDLElBQUksRUFBSTtFQUNaLE9BQVFBLElBQUksQ0FBQ0MsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBTUQsSUFBSSxLQUFLMUIsUUFBUyxJQUFLMEIsSUFBSSxDQUFDRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFNO0FBQ3pGLENBQUMsQ0FBQyxDQUNEQyxPQUFPLENBQUMsVUFBQUgsSUFBSSxFQUFJO0VBQ2IsSUFBTUksS0FBSyxHQUFHekIsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUEwQixVQUFJLEVBQUNQLFNBQVMsRUFBRUUsSUFBSSxDQUFDLENBQUM7RUFDeER2QixFQUFFLENBQUMyQixLQUFLLENBQUNFLElBQUksQ0FBQyxHQUFHRixLQUFLO0FBQzFCLENBQUMsQ0FBQztBQUVORyxNQUFNLENBQUNDLElBQUksQ0FBQy9CLEVBQUUsQ0FBQyxDQUFDMEIsT0FBTyxDQUFDLFVBQUFNLFNBQVMsRUFBSTtFQUNqQyxJQUFJaEMsRUFBRSxDQUFDZ0MsU0FBUyxDQUFDLENBQUNDLFNBQVMsRUFBRTtJQUN6QmpDLEVBQUUsQ0FBQ2dDLFNBQVMsQ0FBQyxDQUFDQyxTQUFTLENBQUNqQyxFQUFFLENBQUM7RUFDL0I7QUFDSixDQUFDLENBQUM7QUFFRkEsRUFBRSxDQUFDRSxTQUFTLEdBQUdBLFNBQVM7QUFDeEJGLEVBQUUsQ0FBQ0csU0FBUyxHQUFHQSxxQkFBUyIsImlnbm9yZUxpc3QiOltdfQ==